USE OnlineBookstore;

-- -----------------------------------------------
--  STORED PROCEDURE: Get total orders by user
-- -----------------------------------------------
DELIMITER //

CREATE PROCEDURE GetUserOrderCount(IN input_user_id INT)
BEGIN
    SELECT U.name, COUNT(O.order_id) AS total_orders
    FROM Users U
    LEFT JOIN Orders O ON U.user_id = O.user_id
    WHERE U.user_id = input_user_id
    GROUP BY U.user_id;
END //

DELIMITER ;

--  Example Usage:
CALL GetUserOrderCount(1);

/*
Output:
+--------+--------------+
| name   | total_orders |
+--------+--------------+
| Alice  |      1       |
+--------+--------------+
*/

-- -----------------------------------------------
--  FUNCTION: Calculate total payment of a user
-- -----------------------------------------------
DELIMITER //

CREATE FUNCTION TotalPaymentByUser(uid INT)
RETURNS DECIMAL(10,2)
DETERMINISTIC
BEGIN
    DECLARE total DECIMAL(10,2);

    SELECT SUM(P.amount)
    INTO total
    FROM Payments P
    JOIN Orders O ON P.order_id = O.order_id
    WHERE O.user_id = uid;

    RETURN IFNULL(total, 0.00);
END //

DELIMITER ;

--  Example Usage:
SELECT TotalPaymentByUser(1) AS total_paid;

/*
Output:
+-------------+
| total_paid  |
+-------------+
|   499.49     |
+-------------+
*/

--  Bonus: You can also use the function in other queries
SELECT U.name, TotalPaymentByUser(U.user_id) AS total_spent
FROM Users U;

/*
Output:
+---------+--------------+
| name    | total_spent  |
+---------+--------------+
| Alice   |  499.49      |
| Bob     |  998.00      |
| Charlie |   0.00       |
| Diana   |   0.00       |
+---------+--------------+
*/
